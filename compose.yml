services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - 8080:8080
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_started
      mongo:
        condition: service_started
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://postgres:5432/madrasati
      - SPRING_DATASOURCE_USERNAME=mydatabase
      - SPRING_DATASOURCE_PASSWORD=password
      - SPRING_REDIS_HOST=redis
      - SPRING_REDIS_PORT=6379
      - SPRING_DATA_MONGODB_URI=mongodb://mongo:27017/madrasati
    deploy:
      resources:
        limits:
          memory: 4g
          cpus: "2.5"
    networks:
      - app-network

  #for postgres sql
  postgres:
    image: postgres
    ports:
      - 5432:5432
    environment:
      - POSTGRES_USER=mydatabase
      - POSTGRES_PASSWORD=password
      - POSTGRES_DB=madrasati
    volumes:
      - postgres-data:/data/pgdata
    networks:
      - app-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -h postgres -U mydatabase"]
      interval: 10s
      retries: 5
      start_period: 10s
      timeout: 10s
    restart: unless-stopped
    deploy:
      resources:
        limits:
          memory: 2G
          cpus: "1.0"

  #for redis
  redis:
    image: redis
    ports:
      - 6379:6379
    volumes:
      - redis-data:/data/mongodata
    networks:
      - app-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 40s
    command: redis-server --appendonly yes
    restart: unless-stopped
    deploy:
      resources:
        limits:
          memory: 512M

  #for monogodb
  mongo:
    image: mongo
    ports:
      - 27017:27017
    volumes:
      - mongo-data:/data/redisdata
    networks:
      - app-network
    healthcheck:
      test: ["CMD", "mongo", "--eval", "db.adminCommand('ping')"]
      interval: 30s
      retries: 3
      start_period: 30s
      timeout: 10s
    restart: unless-stopped
    deploy:
      resources:
        limits:
          memory: 2G
          cpus: "1.0"
networks:
  app-network:
    driver: bridge

volumes:
  postgres-data:
  mongo-data:
  redis-data:
